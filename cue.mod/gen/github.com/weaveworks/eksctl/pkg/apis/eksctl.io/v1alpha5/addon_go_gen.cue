// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/weaveworks/eksctl/pkg/apis/eksctl.io/v1alpha5

package v1alpha5

import ekstypes "github.com/aws/aws-sdk-go-v2/service/eks/types"

// Addon holds the EKS addon configuration
#Addon: {
	// +required
	name?: string @go(Name)

	// +optional
	version?: string @go(Version)

	// +optional
	serviceAccountRoleARN?: string @go(ServiceAccountRoleARN)

	// list of ARNs of the IAM policies to attach
	// +optional
	attachPolicyARNs?: [...string] @go(AttachPolicyARNs,[]string)

	// AttachPolicy holds a policy document to attach
	// +optional
	attachPolicy?: #InlineDocument @go(AttachPolicy)

	// ARN of the permissions' boundary to associate
	// +optional
	permissionsBoundary?: string @go(PermissionsBoundary)

	// WellKnownPolicies for attaching common IAM policies
	wellKnownPolicies?: #WellKnownPolicies @go(WellKnownPolicies)

	// The metadata to apply to the cluster to assist with categorization and organization.
	// Each tag consists of a key and an optional value, both of which you define.
	// +optional
	tags?: {[string]: string} @go(Tags,map[string]string)

	// ResolveConflicts determines how to resolve field value conflicts for an EKS add-on
	// if a value was changed from default
	resolveConflicts?: ekstypes.#ResolveConflicts @go(ResolveConflicts)

	// ConfigurationValues defines the set of configuration properties for add-ons.
	// For now, all properties will be specified as a JSON string
	// and have to respect the schema from DescribeAddonConfiguration.
	// +optional
	configurationValues?: string @go(ConfigurationValues)

	// +optional
	publishers?: [...string] @go(Publishers,[]string)

	// +optional
	types?: [...string] @go(Types,[]string)

	// +optional
	owners?: [...string] @go(Owners,[]string)
}
